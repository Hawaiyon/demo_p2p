// Code generated by go-swagger; DO NOT EDIT.

package transaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetLoanByIDHandlerFunc turns a function with the right signature into a get loan by Id handler
type GetLoanByIDHandlerFunc func(GetLoanByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetLoanByIDHandlerFunc) Handle(params GetLoanByIDParams) middleware.Responder {
	return fn(params)
}

// GetLoanByIDHandler interface for that can handle valid get loan by Id params
type GetLoanByIDHandler interface {
	Handle(GetLoanByIDParams) middleware.Responder
}

// NewGetLoanByID creates a new http.Handler for the get loan by Id operation
func NewGetLoanByID(ctx *middleware.Context, handler GetLoanByIDHandler) *GetLoanByID {
	return &GetLoanByID{Context: ctx, Handler: handler}
}

/*GetLoanByID swagger:route GET /loan/{transactionId} transaction getLoanById

Find loan by ID

Find loan by ID

*/
type GetLoanByID struct {
	Context *middleware.Context
	Handler GetLoanByIDHandler
}

func (o *GetLoanByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetLoanByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
